
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.2.1
 * Query Engine version: 173f8d54f8d52e692c7e27e72a88314ec7aeff60
 */
Prisma.prismaVersion = {
  client: "6.2.1",
  engine: "173f8d54f8d52e692c7e27e72a88314ec7aeff60"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  height: 'height',
  weight: 'weight',
  days_of_workout: 'days_of_workout'
};

exports.Prisma.User_availabilityScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  day: 'day',
  minutes: 'minutes'
};

exports.Prisma.Workout_progressScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  workout_id: 'workout_id',
  date: 'date'
};

exports.Prisma.Exercise_progressScalarFieldEnum = {
  id: 'id',
  workout_progress_id: 'workout_progress_id',
  workout_exercise_id: 'workout_exercise_id',
  sets: 'sets',
  reps: 'reps',
  weight_used: 'weight_used'
};

exports.Prisma.WorkoutperweekScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id'
};

exports.Prisma.WorkoutScalarFieldEnum = {
  id: 'id',
  date: 'date',
  status: 'status'
};

exports.Prisma.Workout_exerciseScalarFieldEnum = {
  id: 'id',
  workout_id: 'workout_id',
  exercise_id: 'exercise_id',
  reps: 'reps',
  set: 'set',
  weight: 'weight'
};

exports.Prisma.ExerciseScalarFieldEnum = {
  id: 'id',
  exercise_cd: 'exercise_cd',
  name: 'name',
  intensity: 'intensity',
  duration: 'duration',
  types: 'types',
  max_rep: 'max_rep',
  image: 'image',
  description: 'description'
};

exports.Prisma.GroupScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.User_group_levelScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  group_id: 'group_id',
  level: 'level'
};

exports.Prisma.Excercise_groupScalarFieldEnum = {
  id: 'id',
  excercise_id: 'excercise_id',
  group_id: 'group_id',
  difficulty: 'difficulty'
};

exports.Prisma.Exercise_muscleScalarFieldEnum = {
  id: 'id',
  exercise_id: 'exercise_id',
  muscle_id: 'muscle_id',
  rating: 'rating'
};

exports.Prisma.MuscleScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.EquipmentScalarFieldEnum = {
  id: 'id',
  name: 'name',
  image: 'image'
};

exports.Prisma.Exercise_equipmentScalarFieldEnum = {
  id: 'id',
  exercise_id: 'exercise_id',
  equipment_id: 'equipment_id'
};

exports.Prisma.User_equipmentScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  equipment_id: 'equipment_id'
};

exports.Prisma.Workout_per_week_workoutScalarFieldEnum = {
  id: 'id',
  workout_id: 'workout_id',
  workoutperweek_id: 'workoutperweek_id'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  users: 'users',
  user_availability: 'user_availability',
  workout_progress: 'workout_progress',
  exercise_progress: 'exercise_progress',
  workoutperweek: 'workoutperweek',
  workout: 'workout',
  workout_exercise: 'workout_exercise',
  exercise: 'exercise',
  group: 'group',
  user_group_level: 'user_group_level',
  excercise_group: 'excercise_group',
  exercise_muscle: 'exercise_muscle',
  muscle: 'muscle',
  equipment: 'equipment',
  exercise_equipment: 'exercise_equipment',
  user_equipment: 'user_equipment',
  workout_per_week_workout: 'workout_per_week_workout'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
